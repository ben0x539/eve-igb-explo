<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Exploration Log</title>
    <script type="text/javascript"><![CDATA[
      var log_form, log_password, log_input, log_output, log_current

      function removeChildren(r) {
        var child
        while ((child = r.firstChild))
          r.removeChild(child)
      }

      function logSetOutput(obj) {
        log_output.parentNode.replaceChild(obj, log_output)
        log_output = obj
        obj.setAttribute("id", "log-output")
      }

      function logSetOutputText(str) {
        var p = document.createElement("p")
        p.appendChild(document.createTextNode(str))
        logSetOutput(p)
      }

      function pad(n){return n<10 ? '0'+n : n}
      function formatTime(time) {
        return time.getFullYear() +
               "-" + pad(time.getMonth()+1) +
               "-" + pad(time.getDate()) +
               " " + pad(time.getHours()) + 
               ":" + pad(time.getMinutes())
      }

      function getLastDowntime() {
        var t = new Date()
        if (t.getUTCHours() < 11)
          t.setUTCDate(t.getUTCDate() - 1)
        t.setUTCHours(11)
        return t
      }

      function logFormatOutput(signatures) {
        if (signatures.length == 0) {
          logSetOutputText("no signatures")
        } else {
          var div = document.createElement("div")
          var btn = document.createElement("button")
          btn.appendChild(document.createTextNode("Clear results"))
          btn.addEventListener("click", function(e) {
            logSetOutput(document.createElement("p"))
          })
          div.appendChild(btn)
          var table = document.createElement("table")
          table.setAttribute("class", "siglist")
          var tr = document.createElement("tr"); // heh
          ["Time", "ID", "Type", "Name"].forEach(function(str) {
            var th = document.createElement("th")
            th.appendChild(document.createTextNode(str))
            tr.appendChild(th)
          })
          table.appendChild(tr)
          var downtime = getLastDowntime()
          for (var i = 0; i < signatures.length; ++i) {
            var item = signatures[i]
            var time = new Date(item.time * 1000)
            item.time = formatTime(time)
            tr = document.createElement("tr")
            if (time > downtime)
              tr.setAttribute("class", "sig-highlight")
            delete item.current; // welp
            ["time", "id", "type", "name"].forEach(function(str) {
              var td = document.createElement("td")
              td.appendChild(document.createTextNode(item[str]))
              td.setAttribute("class", "sig-" + str)
              tr.appendChild(td)
            })
            table.appendChild(tr)
          }
          div.appendChild(table)
          logSetOutput(div)
        }
      }

      function onLogResponse(data) {
        var sigs
        try {
          sigs = JSON.parse(data)
        } catch (e) {
          logSetOutputText("error: bad json data: " + data)
          return
        }
        logFormatOutput(sigs)

        log_input.value = ""
      }

      function onLogSubmit(e) {
        e.preventDefault()
        logSetOutputText("Submitting...")
        if (log_current)
          log_current.abort()
        var r = log_current = new XMLHttpRequest()
        r.open("POST", "http://londeroth.org/~ben/eve.cgi")
        r.onreadystatechange = function(e) {
          if (r.readyState != 4)
            return;
          if (r.status == 200) {
            onLogResponse(r.responseText)
          } else {
            var pre = document.createElement("pre")
            pre.appendChild(document.createTextNode(
                "Error: " + r.statusText + ": " + r.responseText))
            logSetOutput(pre)
          }
        }
        var s = encodeURIComponent
        r.send("password=" + s(log_password.value) +
               "&sig-input=" + s(log_input.value))
      }

      function go() {
        if (window.CCPEVE) {
          // would limit to /~ben/, but looks like the igb chokes on ~
          CCPEVE.requestTrust("http://londeroth.org/")
        }

        var noscript = document.getElementById("noscript")
        noscript.parentNode.removeChild(noscript)

        log_form = document.getElementById("log-form")
        log_password = document.getElementById("log-password")
        log_input = document.getElementById("log-input")
        log_output = document.getElementById("log-output")
        log_form.addEventListener("submit", onLogSubmit)
      }
    ]]></script>
    <style type="text/css"><![CDATA[
      body, html {
        color:              #989898;
        background:         #222;
        font-family:        "EVE Sans Neue",sans-serif;
        font-size:          10pt;
      }

      ::selection {
        background:         #adadad ! important;
      }

      .section {
        background-color:   black;
        border:             1px solid #636363;
        margin:             0.3em;
        padding:            0.3em;
        color:              #bfbfbf;
      }

      h1 {
        margin:             0;
        font-size:          10pt;
        font-weight:        normal;
      }

      .section h2 {
        float:              right;
        padding-left:       0.3em;
        padding-right:      0.3em;
        margin-top:         0;
        font-size:          10pt;
        font-weight:        normal;
      }

      input, textarea {
        font-family:        "EVE Sans Neue",sans-serif;
        font-size:          10pt;
        background-color:   #222;
        color:              #bfbfbf;
        border:             1px solid black;
      }

      textarea {
        font-family:        monospace;
        overflow:           auto;
        white-space:        nowrap;
        width:              100%;
      }

      .textarea-container {
        padding-left:       8px;
        padding-right:      16px;
      }

      button {
        font-family:        "EVE Sans Neue",sans-serif;
        font-size:          10pt;
        color:              #9a9a9a;
        background-image:   -moz-linear-gradient(to bottom, black, #151515);
        background:         -webkit-gradient(linear, left top, left bottom, from(black), to(#151515));
        border:             1px solid black;
        border-bottom:      1px solid #353535;
      }

      button:hover {
        border:             1px solid #999;
      }

      button:active {
        border:             1px solid white;
      }

      form {
        display:            inline;
      }

      table.siglist {
        white-space:        nowrap;
        border-spacing:     0;
        border-collapse:    collapse;
      }

      table.siglist .sig-highlight td {
        color:              #65bf65;
      }

      table.siglist th {
        text-align:         left;
        font-weight:        normal
      }

      table.siglist td, table.siglist th {
        background-color:   #222;
        border-top:         1px solid #595959;
        border-bottom:      1px solid #595959;
        border-left:        1px solid #3e3e3e;
        border-right:       1px solid #3e3e3e;
        padding:            2px 6px;
      }

      table.siglist .sig-id {
        font-family:        monospace;
      }
    ]]></style>
  </head>
  <body onload="go()">
    <h1>Exploration logging tool</h1>
    <p id="noscript">JavaScript is recommended.</p>
    <div class="section">
      <h2>Log signature</h2>
      <form id="log-form" method="post" action="eve.cgi">
        <p>
          Password: <input type="password" size="12"
                           name="password" id="log-password" />
          <button>Log</button>
        </p>
        <p class="textarea-container">
          <textarea rows="8" name="sig-input" id="log-input" />
        </p>
      </form>
      <p id="log-output" />
    </div>
  </body>
</html>
